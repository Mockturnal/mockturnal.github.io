{"version":3,"file":"component---src-pages-works-index-jsx-4c7f9ddf14347033c28b.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/modules/works/index.jsx","webpack://gatsby-starter-default/./src/pages/works/index.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { StaticImage } from 'gatsby-plugin-image'\n\nconst PROJECT_FILTER_TYPE = {\n  PROFESSIONAL: 'PROFESSIONAL',\n  PERSONAL: 'PERSONAL',\n}\n\nconst PROJECT_FILTER_CATEGORY_TYPE = {\n  ALL: 'All',\n  UIUX: 'UI/UX',\n  WEBSITE: 'WEBSITE',\n  MOBILE: 'MOBILE',\n}\n\nconst projectImgClassName =\n  'max-h-32 md:max-h-48 lg:max-h-64 2xl:max-h-72 rounded-xl'\n\nfunction getProfessionalProjects() {\n  const professionalProjects = [\n    {\n      image: (\n        <StaticImage\n          src=\"./project/skillcode/images/brand-logo.png\"\n          alt=\"title\"\n          className={projectImgClassName}\n          objectFit=\"cover\"\n        />\n      ),\n      title: 'Pro - Website',\n      category: PROJECT_FILTER_CATEGORY_TYPE.WEBSITE,\n    },\n    {\n      image: (\n        <StaticImage\n          src=\"./project/skillcode/images/brand-logo.png\"\n          alt=\"title\"\n          className={projectImgClassName}\n          objectFit=\"cover\"\n        />\n      ),\n      title: 'Pro - Mobile',\n      category: PROJECT_FILTER_CATEGORY_TYPE.MOBILE,\n    },\n  ]\n\n  // Assign project type for consistency\n  professionalProjects.forEach(\n    project => (project.type = PROJECT_FILTER_TYPE.PROFESSIONAL)\n  )\n\n  return professionalProjects\n}\n\nfunction getPersonalProjects() {\n  const personalProjects = [\n    {\n      image: (\n        <StaticImage\n          src=\"./project/skillcode/images/brand-logo.png\"\n          alt=\"title\"\n          className={projectImgClassName}\n          objectFit=\"cover\"\n        />\n      ),\n      title: 'Personal - UI/UX',\n      category: PROJECT_FILTER_CATEGORY_TYPE.UIUX,\n    },\n    {\n      image: (\n        <StaticImage\n          src=\"./project/skillcode/images/brand-logo.png\"\n          alt=\"title\"\n          className={projectImgClassName}\n          objectFit=\"cover\"\n        />\n      ),\n      title: 'Personal - Mobile',\n      category: PROJECT_FILTER_CATEGORY_TYPE.MOBILE,\n    },\n  ]\n\n  // Assign project type for consistency\n  personalProjects.forEach(\n    project => (project.type = PROJECT_FILTER_TYPE.PERSONAL)\n  )\n\n  return personalProjects\n}\n\nfunction getProjectList(projectType, projectCategory) {\n  const professionalProjects = getProfessionalProjects()\n  const personalProjects = getPersonalProjects()\n\n  const combinedProjects = personalProjects.concat(professionalProjects)\n\n  // Filter by parameter\n  let filtered = combinedProjects.filter(\n    project => project.type === projectType\n  )\n  if (projectCategory !== PROJECT_FILTER_CATEGORY_TYPE.ALL) {\n    filtered = filtered.filter(project => project.category === projectCategory)\n  }\n\n  return filtered\n}\n\nconst ProjectFilter = ({\n  projectType,\n  setProjectType,\n  setProjectCategory,\n  isCategoryCollapsed,\n  setIsCategoryCollapsed,\n}) => {\n  const handleProjectTypeChange = (event, selectedProjectType) => {\n    // Compare the former value of projectType with the new one\n    if (selectedProjectType === projectType) {\n      // Open / Close the category dropdown\n      setIsCategoryCollapsed(!isCategoryCollapsed)\n      return\n    }\n\n    setProjectType(selectedProjectType)\n    if (!isCategoryCollapsed) {\n      setIsCategoryCollapsed(true)\n    }\n\n    changeTextColorByID(event.target.id)\n  }\n\n  const handleProjectCategoryChange = (event, selectedCategory) => {\n    setProjectCategory(selectedCategory)\n    changeTextColorByID(event.target.id)\n  }\n\n  function changeTextColorByID(clickedId) {\n    // Get clicked element\n    const clicked = document.getElementById(clickedId)\n    // Get parent of clicked\n    const clickedParent = clicked.parentNode\n\n    clickedParent.childNodes.forEach(element => {\n      // Change text from black to grey (deactivate) for siblings button\n      if (element.onclick) {\n        element.classList.replace('text-black', 'text-gray-500')\n      }\n    })\n    // Change text from gray to black (activate) for clicked button\n    clicked.classList.replace('text-gray-500', 'text-black')\n  }\n\n  return (\n    <div className=\"flex flex-col space-y-2\">\n      <div\n        className=\"flex flex-row items-center font-semibold text-base lg:text-lg xl:text-xl 2xl:text-2xl space-x-4\"\n        id=\"project-type\"\n      >\n        <button\n          className=\"text-black focus:outline-none cursor-default\"\n          id=\"professional\"\n          onClick={event =>\n            handleProjectTypeChange(event, PROJECT_FILTER_TYPE.PROFESSIONAL)\n          }\n        >\n          Project\n        </button>\n        <p>/</p>\n        <button\n          className=\"text-gray-500 focus:outline-none cursor-default\"\n          id=\"personal\"\n          onClick={event =>\n            handleProjectTypeChange(event, PROJECT_FILTER_TYPE.PERSONAL)\n          }\n        >\n          Karsa Shoots\n        </button>\n      </div>\n      <div\n        className={`flex flex-row items-center font-semibold text-sm lg:text-base xl:text-xl text-2xl:text-xl text-gray-500 space-x-2 transition-all ease-in-out overflow-hidden duration-700 ${\n          isCategoryCollapsed ? 'max-h-96' : 'max-h-0'\n        }`}\n        id=\"project-category\"\n      >\n        <button\n          className=\"text-black focus:outline-none cursor-default\"\n          id=\"all\"\n          onClick={event =>\n            handleProjectCategoryChange(event, PROJECT_FILTER_CATEGORY_TYPE.ALL)\n          }\n        >\n          All\n        </button>\n        <p>/</p>\n        <button\n          className=\"text-gray-500 focus:outline-none cursor-default\"\n          id=\"website\"\n          onClick={event =>\n            handleProjectCategoryChange(\n              event,\n              PROJECT_FILTER_CATEGORY_TYPE.WEBSITE\n            )\n          }\n        >\n          Website\n        </button>\n        <p>/</p>\n        <button\n          className=\"text-gray-500 focus:outline-none cursor-default\"\n          id=\"mobile\"\n          onClick={event =>\n            handleProjectCategoryChange(\n              event,\n              PROJECT_FILTER_CATEGORY_TYPE.MOBILE\n            )\n          }\n        >\n          Mobile App\n        </button>\n        <p>/</p>\n        <button\n          className=\"text-gray-500 focus:outline-none cursor-default\"\n          id=\"uiux\"\n          onClick={event =>\n            handleProjectCategoryChange(\n              event,\n              PROJECT_FILTER_CATEGORY_TYPE.UIUX\n            )\n          }\n        >\n          UI/UX Design\n        </button>\n      </div>\n    </div>\n  )\n}\n\nconst ProjectCard = ({ index, image, title }) => {\n  function getIndex(index) {\n    return index.toString().length === 1 ? `0${index + 1}` : index + 1\n  }\n\n  return (\n    <div className=\"w-1/2 lg:w-1/3 hover:shadow-2xl rounded-xl\">\n      <a href=\"#\" className=\"flex flex-col p-2 md:p-4 space-y-4\">\n        <div className=\"transition ease-in-out transform group-hover:scale-105\">\n          {image}\n        </div>\n        <div className=\"flex flex-row\">\n          <p className=\"text-lg\">\n            <span className=\"text-gray-500\">{getIndex(index)} / </span>\n            {title}\n          </p>\n        </div>\n      </a>\n    </div>\n  )\n}\n\nconst Page = () => {\n  const [isCategoryCollapsed, setIsCategoryCollapsed] = useState(false)\n\n  const [projectType, setProjectType] = useState(\n    PROJECT_FILTER_TYPE.PROFESSIONAL\n  )\n\n  const [projectCategory, setProjectCategory] = useState(\n    PROJECT_FILTER_CATEGORY_TYPE.ALL\n  )\n\n  return (\n    <div className=\"flex flex-col p-6 lg:p-12 xl:p-16 space-y-10\">\n      <h2 className=\"font-bold text-4xl md:text-5xl xl:text-6xl 2xl:text-8xl\">\n        Karsa Works\n      </h2>\n      <ProjectFilter\n        projectType={projectType}\n        setProjectType={setProjectType}\n        setProjectCategory={setProjectCategory}\n        isCategoryCollapsed={isCategoryCollapsed}\n        setIsCategoryCollapsed={setIsCategoryCollapsed}\n      />\n      <div className=\"flex flex-wrap\">\n        {getProjectList(projectType, projectCategory).map((project, index) => (\n          <ProjectCard\n            index={index}\n            image={project.image}\n            title={project.title}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Page\n","import WorksPage from '../../modules/works/index'\n\nexport default WorksPage\n"],"names":["PROJECT_FILTER_TYPE","PROJECT_FILTER_CATEGORY_TYPE","projectImgClassName","getProjectList","projectType","projectCategory","professionalProjects","image","S","src","alt","className","objectFit","title","category","forEach","project","type","getProfessionalProjects","filtered","personalProjects","getPersonalProjects","concat","filter","ProjectFilter","setProjectType","setProjectCategory","isCategoryCollapsed","setIsCategoryCollapsed","handleProjectTypeChange","event","selectedProjectType","changeTextColorByID","target","id","handleProjectCategoryChange","selectedCategory","clickedId","clicked","document","getElementById","parentNode","childNodes","element","onclick","classList","replace","onClick","ProjectCard","index","href","toString","length","getIndex","useState","map"],"sourceRoot":""}